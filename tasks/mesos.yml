---
# == Work Dir for replicated log
- name: create work dir
  file: path={{ mesos_work_dir }} state=directory

# == Remove default configs
- name: Remove Default Mesos Configs
  file: state=absent path=/etc/mesos/

- name: Remove Mesos ZK File
  file: state=absent path=/etc/mesos/zk

- name: Remove Default Mesos-Master Config
  file: state=absent path=/etc/mesos-master/

- name: Remove Default Mesos-Slave Config
  file: state=absent path=/etc/mesos-slave/

# == Configure and recreate
- name: Mesos default config file
  template: src=conf-mesos.j2 dest=/etc/default/mesos
  notify:
    - Restart mesos-master
    - Restart mesos-slave

- name: Mesos Master config file
  template: src=conf-mesos-master.j2 dest=/etc/default/mesos-master
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"
  notify:
    - Restart mesos-master

- name: Mesos Slave config file
  template: src=conf-mesos-slave.j2 dest=/etc/default/mesos-slave
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"
  notify:
    - Restart mesos-slave

- name: Ensure mesos-master config dir exists
  file: state=directory path=/etc/mesos-master/ recurse=yes
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"

- name: Ensure mesos-slave config dir exists
  file: state=directory path=/etc/mesos-slave/ recurse=yes
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"

- name: Generate mesos-master config
  lineinfile: create=yes state=present dest="/etc/mesos-master/{{item.name}}" line="{{item.value}}"
  with_items:
    mesos_master_additional_config
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"

- name: Generate mesos-master flag
  file: state=touch path="/etc/mesos-master/?{{item}}"
  with_items:
    mesos_master_additional_flags
  when: mesos_install_mode == "master" or mesos_install_mode == "master-slave"

- name: Generate mesos-slave config
  lineinfile: create=yes state=present dest="/etc/mesos-slave/{{item.name}}" line="{{item.value}}"
  with_items:
    mesos_slave_additional_config
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"

- name: Generate mesos-slave flag
  file: state=touch path="/etc/mesos-slave/?{{item}}"
  with_items:
    mesos_slave_additional_flags
  when: mesos_install_mode == "slave" or mesos_install_mode == "master-slave"

- name: Check if upstart exists
  stat: path=/etc/init/
  register: etc_init

- name: Mesos master upstart script
  template: src=init-mesos-master.j2 dest=/etc/init/mesos-master.conf
  when: (mesos_install_mode == "master" or mesos_install_mode == "master-slave") and etc_init.stat.exists == true
  notify:
    - Restart mesos-master

- name: Mesos slave upstart script
  template: src=init-mesos-slave.j2 dest=/etc/init/mesos-slave.conf
  when: (mesos_install_mode == "slave" or mesos_install_mode == "master-slave") and etc_init.stat.exists == true
  notify:
    - Restart mesos-slave
    
- name: Check if systemd exists
  stat: path=/usr/lib/systemd/system/
  register: systemd_check
  
- name: Mesos master systemd script
  template: src=mesos-master.service.j2 dest=/usr/lib/systemd/system/mesos-master.service
  when: (mesos_install_mode == "master" or mesos_install_mode == "master-slave") and systemd_check.stat.exists == true
  notify:
    - Reload daemon
    - Restart mesos-master

- name: Mesos slave systemd script
  template: src=mesos-slave.service.j2 dest=/usr/lib/systemd/system/mesos-slave.service
  when: (mesos_install_mode == "slave" or mesos_install_mode == "master-slave") and systemd_check.stat.exists == true
  notify:
    - Reload daemon
    - Restart mesos-slave

- name: Disable mesos-master service
  service: name=mesos-master enabled=no
  when: mesos_install_mode == "slave" and systemd_check.stat.exists == true

- name: Disable mesos-slave service
  service: name=mesos-slave enabled=no
  when: mesos_install_mode == "master" and systemd_check.stat.exists == true
